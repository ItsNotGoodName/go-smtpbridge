//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/sqlite"
)

var Traces = newTracesTable("", "traces", "")

type tracesTable struct {
	sqlite.Table

	// Columns
	ID        sqlite.ColumnInteger
	RequestID sqlite.ColumnString
	Source    sqlite.ColumnString
	Seq       sqlite.ColumnInteger
	Action    sqlite.ColumnString
	Level     sqlite.ColumnString
	Data      sqlite.ColumnString
	CreatedAt sqlite.ColumnTimestamp

	AllColumns     sqlite.ColumnList
	MutableColumns sqlite.ColumnList
}

type TracesTable struct {
	tracesTable

	EXCLUDED tracesTable
}

// AS creates new TracesTable with assigned alias
func (a TracesTable) AS(alias string) *TracesTable {
	return newTracesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new TracesTable with assigned schema name
func (a TracesTable) FromSchema(schemaName string) *TracesTable {
	return newTracesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new TracesTable with assigned table prefix
func (a TracesTable) WithPrefix(prefix string) *TracesTable {
	return newTracesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new TracesTable with assigned table suffix
func (a TracesTable) WithSuffix(suffix string) *TracesTable {
	return newTracesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newTracesTable(schemaName, tableName, alias string) *TracesTable {
	return &TracesTable{
		tracesTable: newTracesTableImpl(schemaName, tableName, alias),
		EXCLUDED:    newTracesTableImpl("", "excluded", ""),
	}
}

func newTracesTableImpl(schemaName, tableName, alias string) tracesTable {
	var (
		IDColumn        = sqlite.IntegerColumn("id")
		RequestIDColumn = sqlite.StringColumn("request_id")
		SourceColumn    = sqlite.StringColumn("source")
		SeqColumn       = sqlite.IntegerColumn("seq")
		ActionColumn    = sqlite.StringColumn("action")
		LevelColumn     = sqlite.StringColumn("level")
		DataColumn      = sqlite.StringColumn("data")
		CreatedAtColumn = sqlite.TimestampColumn("created_at")
		allColumns      = sqlite.ColumnList{IDColumn, RequestIDColumn, SourceColumn, SeqColumn, ActionColumn, LevelColumn, DataColumn, CreatedAtColumn}
		mutableColumns  = sqlite.ColumnList{RequestIDColumn, SourceColumn, SeqColumn, ActionColumn, LevelColumn, DataColumn, CreatedAtColumn}
	)

	return tracesTable{
		Table: sqlite.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:        IDColumn,
		RequestID: RequestIDColumn,
		Source:    SourceColumn,
		Seq:       SeqColumn,
		Action:    ActionColumn,
		Level:     LevelColumn,
		Data:      DataColumn,
		CreatedAt: CreatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
