//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/sqlite"
)

var MailmanQueue = newMailmanQueueTable("", "mailman_queue", "")

type mailmanQueueTable struct {
	sqlite.Table

	// Columns
	MessageID sqlite.ColumnInteger
	CreatedAt sqlite.ColumnTimestamp

	AllColumns     sqlite.ColumnList
	MutableColumns sqlite.ColumnList
}

type MailmanQueueTable struct {
	mailmanQueueTable

	EXCLUDED mailmanQueueTable
}

// AS creates new MailmanQueueTable with assigned alias
func (a MailmanQueueTable) AS(alias string) *MailmanQueueTable {
	return newMailmanQueueTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new MailmanQueueTable with assigned schema name
func (a MailmanQueueTable) FromSchema(schemaName string) *MailmanQueueTable {
	return newMailmanQueueTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new MailmanQueueTable with assigned table prefix
func (a MailmanQueueTable) WithPrefix(prefix string) *MailmanQueueTable {
	return newMailmanQueueTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new MailmanQueueTable with assigned table suffix
func (a MailmanQueueTable) WithSuffix(suffix string) *MailmanQueueTable {
	return newMailmanQueueTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newMailmanQueueTable(schemaName, tableName, alias string) *MailmanQueueTable {
	return &MailmanQueueTable{
		mailmanQueueTable: newMailmanQueueTableImpl(schemaName, tableName, alias),
		EXCLUDED:          newMailmanQueueTableImpl("", "excluded", ""),
	}
}

func newMailmanQueueTableImpl(schemaName, tableName, alias string) mailmanQueueTable {
	var (
		MessageIDColumn = sqlite.IntegerColumn("message_id")
		CreatedAtColumn = sqlite.TimestampColumn("created_at")
		allColumns      = sqlite.ColumnList{MessageIDColumn, CreatedAtColumn}
		mutableColumns  = sqlite.ColumnList{MessageIDColumn, CreatedAtColumn}
	)

	return mailmanQueueTable{
		Table: sqlite.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		MessageID: MessageIDColumn,
		CreatedAt: CreatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
