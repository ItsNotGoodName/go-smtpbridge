package pages

import (
  "strconv"
  c "github.com/ItsNotGoodName/smtpbridge/web/components"
  "github.com/ItsNotGoodName/smtpbridge/internal/build"
  "github.com/ItsNotGoodName/smtpbridge/internal/models"
  "github.com/ItsNotGoodName/smtpbridge/web/meta"
  "github.com/ItsNotGoodName/smtpbridge/pkg/htmx"
  "github.com/ItsNotGoodName/smtpbridge/web/events"
  "github.com/ItsNotGoodName/smtpbridge/web/routes"
  "github.com/ItsNotGoodName/smtpbridge/web/helpers"
)


type indexViewProps struct {
  StorageStatsProps c.StorageStatsProps
  RetentionPolicy models.ConfigRetentionPolicy
  Envelopes []models.Envelope
}

templ indexView(m meta.Meta, props indexViewProps) {
	@c.LayoutDefault(m) {
    <div class="flex flex-col gap-4 p-4">
      <div hx-trigger={ htmx.Join("every 5s", events.EnvelopeCreated.FromBody(), events.RetentionPolicyRun.FromBody()) } hx-get={ routes.RecentEnvelopeListComponent().URLString() }>
        @c.RecentEnvelopeList(m, c.RecentEnvelopeListProps{
          Envelopes: props.Envelopes,
        })
      </div>
      <div class="overflow-x-auto">
        <div class="stats stats-vertical md:stats-horizontal border-base-200 w-full border" hx-trigger={ htmx.Join("every 5s", events.EnvelopeCreated.FromBody(), events.RetentionPolicyRun.FromBody()) } hx-get={ routes.StorageStatsComponent().URLString() }>
          @c.StorageStats(props.StorageStatsProps)
        </div>
      </div>
      <div class="flex flex-col gap-4 lg:flex-row">
        <div class="flex-1">
          <div class="border-base-200 rounded border">
            <div class="border-base-200 flex items-center justify-between gap-4 border-b p-4">
              <h1 class="text-xl font-bold">Retention Policy</h1>
              <button class="btn btn-xs" hx-post={ routes.RetentionPolicyRun().URLString() }>Run</button>
            </div>
            <div class="overflow-x-auto">
              <table class="table">
                <tbody>
                  if props.RetentionPolicy.MinAge.String() != "0s" {
                    <tr>
                      <th>Minimum Age</th>
                      <td>{ props.RetentionPolicy.MinAge.String() }</td>
                    </tr>
                  }
                  if props.RetentionPolicy.EnvelopeCount != nil {
                    <tr>
                      <th>Total Envelope Count</th>
                      <td>{ strconv.Itoa(*props.RetentionPolicy.EnvelopeCount) }</td>
                    </tr>
                  }
                  if props.RetentionPolicy.EnvelopeAge != nil {
                    <tr>
                      <th>Maximum Envelope Age</th>
                      <td>{ props.RetentionPolicy.EnvelopeAge.String() }</td>
                    </tr>
                  }
                  if props.RetentionPolicy.AttachmentSize != nil {
                    <tr>
                      <th>Total Attachment Size</th>
                      <td>{ helpers.BytesHumanize(*props.RetentionPolicy.AttachmentSize)  }</td>
                    </tr>
                  }
                </tbody>
              </table>
            </div>
          </div>
        </div>
        <div class="flex-1">
          <div class="border-base-200 rounded border">
            <h1 class="border-base-200 border-b p-4 text-xl font-bold">Build</h1>
            <div class="overflow-x-auto">
              <table class="table">
                <thead></thead>
                <tbody>
                  <tr>
                    <th>Built By</th>
                    <td>{ build.Current.BuiltBy }</td>
                  </tr>
                  <tr>
                    <th>Commit</th>
                    <td><a class="link" href={ templ.URL(build.Current.CommitURL()) }>{ build.Current.Commit }</a></td>
                  </tr>
                  <tr>
                    <th>Date</th>
                    <td>{ build.Current.Date }</td>
                  </tr>
                  <tr>
                    <th>Version</th>
                    <td><a class="link" href={ templ.URL(build.Current.ReleaseURL) }>{ build.Current.Version }</a></td>
                  </tr>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>
	}
}
