// Code generated by templ@v0.2.334 DO NOT EDIT.

package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import (
	"strconv"

	"github.com/ItsNotGoodName/smtpbridge/internal/models"
	"github.com/ItsNotGoodName/smtpbridge/web/helpers"
)

type StorageStatsProps struct {
	Storage models.Storage
}

func StorageStats(props StorageStatsProps) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_1 := templ.GetChildren(ctx)
		if var_1 == nil {
			var_1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, err = templBuffer.WriteString("<div class=\"stat border-base-200\"><div class=\"stat-title\">")
		if err != nil {
			return err
		}
		var_2 := `Envelope Count`
		_, err = templBuffer.WriteString(var_2)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</div><div class=\"stat-value\">")
		if err != nil {
			return err
		}
		var var_3 string = strconv.FormatInt(int64(props.Storage.EnvelopeCount), 10)
		_, err = templBuffer.WriteString(templ.EscapeString(var_3))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</div></div><div class=\"stat border-base-200\"><div class=\"stat-title\">")
		if err != nil {
			return err
		}
		var_4 := `Attachment Count`
		_, err = templBuffer.WriteString(var_4)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</div><div class=\"stat-value\">")
		if err != nil {
			return err
		}
		var var_5 string = strconv.FormatInt(int64(props.Storage.AttachmentCount), 10)
		_, err = templBuffer.WriteString(templ.EscapeString(var_5))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</div></div><div class=\"stat border-base-200\"><div class=\"stat-title\">")
		if err != nil {
			return err
		}
		var_6 := `Attachment Size`
		_, err = templBuffer.WriteString(var_6)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</div><div class=\"stat-value\">")
		if err != nil {
			return err
		}
		var var_7 string = helpers.BytesHumanize(props.Storage.AttachmentSize)
		_, err = templBuffer.WriteString(templ.EscapeString(var_7))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</div></div><div class=\"stat border-base-200\"><div class=\"stat-title\">")
		if err != nil {
			return err
		}
		var_8 := `Database Size`
		_, err = templBuffer.WriteString(var_8)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</div><div class=\"stat-value\">")
		if err != nil {
			return err
		}
		var var_9 string = helpers.BytesHumanize(props.Storage.DatabaseSize)
		_, err = templBuffer.WriteString(templ.EscapeString(var_9))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</div></div>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}
