// Code generated by templ@v0.2.334 DO NOT EDIT.

package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import (
	"github.com/ItsNotGoodName/smtpbridge/web/routes"
)

type LoginFormProps struct {
	Flash    templ.Component
	Username string
	Password string
}

func LoginForm(props LoginFormProps) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_1 := templ.GetChildren(ctx)
		if var_1 == nil {
			var_1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, err = templBuffer.WriteString("<form class=\"flex flex-col gap-4\" hx-post=\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString(routes.Login().URLString()))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\" data-loading-states><div class=\"form-control\"><label class=\"label\"><span class=\"label-text\">")
		if err != nil {
			return err
		}
		var_2 := `Username`
		_, err = templBuffer.WriteString(var_2)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</span></label><input name=\"username\" type=\"text\" placeholder=\"Username\" autocomplete=\"username\" class=\"input input-bordered\" value=\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString(props.Username))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\"></div><div class=\"form-control\"><label class=\"label\"><span class=\"label-text\">")
		if err != nil {
			return err
		}
		var_3 := `Password`
		_, err = templBuffer.WriteString(var_3)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</span></label><input name=\"password\" type=\"password\" placeholder=\"Password\" autocomplete=\"current-password\" class=\"input input-bordered\" value=\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString(props.Password))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\"></div><button type=\"submit\" class=\"btn btn-primary\" data-loading-disable><span data-loading-class=\"loading loading-spinner loading-sm\">")
		if err != nil {
			return err
		}
		var_4 := `Login`
		_, err = templBuffer.WriteString(var_4)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</span></button>")
		if err != nil {
			return err
		}
		if props.Flash != nil {
			err = props.Flash.Render(ctx, templBuffer)
			if err != nil {
				return err
			}
		}
		_, err = templBuffer.WriteString("</form>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}
