// Code generated by templ@v0.2.334 DO NOT EDIT.

package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import (
	"net/url"
	"strconv"

	"github.com/ItsNotGoodName/smtpbridge/pkg/pagination"
	"github.com/ItsNotGoodName/smtpbridge/web/helpers"
	"github.com/ItsNotGoodName/smtpbridge/web/routes"
)

type PaginateFooterProps struct {
	Route      routes.Route
	Query      url.Values
	PageResult pagination.PageResult
}

func PaginateFooter(props PaginateFooterProps) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_1 := templ.GetChildren(ctx)
		if var_1 == nil {
			var_1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, err = templBuffer.WriteString("<div class=\"flex flex-col items-center justify-between gap-4 p-4 sm:flex-row\"><div class=\"mr-auto whitespace-nowrap\">")
		if err != nil {
			return err
		}
		var var_2 string = strconv.Itoa(props.PageResult.Seen())
		_, err = templBuffer.WriteString(templ.EscapeString(var_2))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" ")
		if err != nil {
			return err
		}
		var_3 := `of `
		_, err = templBuffer.WriteString(var_3)
		if err != nil {
			return err
		}
		var var_4 string = strconv.Itoa(props.PageResult.TotalItems)
		_, err = templBuffer.WriteString(templ.EscapeString(var_4))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</div><div class=\"join ml-auto\"><a class=\"join-item btn btn-sm btn-outline\"")
		if err != nil {
			return err
		}
		if !props.PageResult.HasPrevious() {
			_, err = templBuffer.WriteString(" disabled")
			if err != nil {
				return err
			}
		}
		_, err = templBuffer.WriteString(" href=\"")
		if err != nil {
			return err
		}
		var var_5 templ.SafeURL = props.Route.URLQuery((helpers.Query(props.Query, "page", props.PageResult.Previous())))
		_, err = templBuffer.WriteString(templ.EscapeString(string(var_5)))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\">")
		if err != nil {
			return err
		}
		var_6 := `Previous`
		_, err = templBuffer.WriteString(var_6)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</a><button class=\"join-item btn btn-sm btn-outline\">")
		if err != nil {
			return err
		}
		var var_7 string = strconv.Itoa(props.PageResult.Page)
		_, err = templBuffer.WriteString(templ.EscapeString(var_7))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" ")
		if err != nil {
			return err
		}
		var_8 := `/ `
		_, err = templBuffer.WriteString(var_8)
		if err != nil {
			return err
		}
		var var_9 string = strconv.Itoa(props.PageResult.TotalPages)
		_, err = templBuffer.WriteString(templ.EscapeString(var_9))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</button><a class=\"join-item btn btn-sm btn-outline\"")
		if err != nil {
			return err
		}
		if !props.PageResult.HasNext() {
			_, err = templBuffer.WriteString(" disabled")
			if err != nil {
				return err
			}
		}
		_, err = templBuffer.WriteString(" href=\"")
		if err != nil {
			return err
		}
		var var_10 templ.SafeURL = props.Route.URLQuery(helpers.Query(props.Query, "page", props.PageResult.Next()))
		_, err = templBuffer.WriteString(templ.EscapeString(string(var_10)))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\">")
		if err != nil {
			return err
		}
		var_11 := `Next`
		_, err = templBuffer.WriteString(var_11)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</a></div></div>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}
