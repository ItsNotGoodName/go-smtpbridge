// Code generated by templ@v0.2.334 DO NOT EDIT.

package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import (
	"github.com/ItsNotGoodName/smtpbridge/internal/models"
	"github.com/ItsNotGoodName/smtpbridge/web/icons"
	"github.com/ItsNotGoodName/smtpbridge/web/routes"
)

type AttachmentCardProps struct {
	Attachment models.Attachment
}

func AttachmentCard(props AttachmentCardProps) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_1 := templ.GetChildren(ctx)
		if var_1 == nil {
			var_1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, err = templBuffer.WriteString("<div class=\"w-full sm:w-80\"><div class=\"card card-compact bg-base-100 border-base-200 border\">")
		if err != nil {
			return err
		}
		if props.Attachment.IsImage() {
			_, err = templBuffer.WriteString("<figure class=\"bg-base-content\"><img src=\"")
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString(templ.EscapeString(routes.AttachmentFile(props.Attachment.FileName()).URLString()))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("\" alt=\"")
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString(templ.EscapeString(props.Attachment.Name))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("\"></figure>")
			if err != nil {
				return err
			}
		}
		_, err = templBuffer.WriteString("<div class=\"flex flex-1 flex-col justify-end gap-2 p-2\"><p class=\"break-all font-bold\">")
		if err != nil {
			return err
		}
		var var_2 string = props.Attachment.Name
		_, err = templBuffer.WriteString(templ.EscapeString(var_2))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</p><div class=\"join flex\"><a class=\"join-item btn flex flex-1 items-center\" title=\"Envelope\" href=\"")
		if err != nil {
			return err
		}
		var var_3 templ.SafeURL = routes.Envelope(props.Attachment.MessageID).URLQuery("tab=" + routes.EnvelopeTabAttachments.String())
		_, err = templBuffer.WriteString(templ.EscapeString(string(var_3)))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\">")
		if err != nil {
			return err
		}
		err = icons.Mail("h-5 w-5").Render(ctx, templBuffer)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</a><a class=\"join-item btn flex flex-1 items-center\" title=\"View\" hx-boost=\"false\" href=\"")
		if err != nil {
			return err
		}
		var var_4 templ.SafeURL = routes.AttachmentFile(props.Attachment.FileName()).URL()
		_, err = templBuffer.WriteString(templ.EscapeString(string(var_4)))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\">")
		if err != nil {
			return err
		}
		err = icons.Eye("h-5 w-5").Render(ctx, templBuffer)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</a><a class=\"join-item btn flex flex-1 items-center\" title=\"Download\" hx-boost=\"false\" href=\"")
		if err != nil {
			return err
		}
		var var_5 templ.SafeURL = routes.AttachmentFile(props.Attachment.FileName()).URLQuery("download=1")
		_, err = templBuffer.WriteString(templ.EscapeString(string(var_5)))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\">")
		if err != nil {
			return err
		}
		err = icons.Download("h-5 w-5").Render(ctx, templBuffer)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</a></div></div></div></div>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}
